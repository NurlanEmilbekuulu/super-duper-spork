name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
      - '!main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git and SSH
      run: |
        sudo apt-get install -y git
        mkdir -p ~/.ssh
        echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa

    - name: Get default branch
      run: |
        DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
        echo "Default branch is: $DEFAULT_BRANCH"

    - name: Configure Git
      run: |
        git config --global user.email ${{ secrets.ACTOR_EMAIL }}
        git config --global user.name "$GITHUB_ACTOR"

    - name: Merge to Master
      run: |
        ls -a
        DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
        git checkout -B $DEFAULT_BRANCH origin/$DEFAULT_BRANCH
        git merge $GITHUB_SHA
        git push origin $DEFAULT_BRANCH

    # - name: Merge to Master
    #   run: |
    #     git checkout master
    #     git reset --hard origin/master
    #     git merge $GITHUB_SHA
    #     git push origin master
        
  build-and-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run tests
      run: pytest tests

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to staging
      run: |
        # Add your deployment script or commands here
        echo "Deploying to staging environment..."
